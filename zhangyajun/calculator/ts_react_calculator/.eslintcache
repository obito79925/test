[{"E:\\任务\\app\\src\\index.tsx":"1","E:\\任务\\app\\src\\reportWebVitals.ts":"2","E:\\任务\\app\\src\\Touchables.tsx":"3"},{"size":567,"mtime":1610942904787,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":5232,"mtime":1610947426586,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"14gjkh2",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"E:\\任务\\app\\src\\index.tsx",[],["16","17"],"E:\\任务\\app\\src\\reportWebVitals.ts",[],"E:\\任务\\app\\src\\Touchables.tsx",["18","19"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\ninterface Props {\r\n    eq: string,\r\n    result: string\r\n}\r\n\r\ninterface State {\r\n    eq: string,\r\n    result: string\r\n}\r\n\r\nclass Touchables extends React.Component <Props, State>{\r\n    // 定义一个构造函数\r\n    constructor(props: Props){\r\n        super(props);\r\n        this.state = {\r\n            eq: this.props.eq,\r\n            result: this.props.result,\r\n        }\r\n    }\r\n    _onPressButton (num: string) {\r\n        let eq_tmp : string = this.state.eq;\r\n        eq_tmp = eq_tmp + num;\r\n        let last : string = eq_tmp.substring(eq_tmp.length-1);//表达式的最后一位\r\n        let second : string = eq_tmp.substring(eq_tmp.length-2,eq_tmp.length-1);//表达式的倒数第二位\r\n        let two : string = eq_tmp.substring(eq_tmp.length-2); //表达式的最后两位组成的字符串\r\n        switch (num) {\r\n            case '+':\r\n            case '-':\r\n            case '*':\r\n            case '/':\r\n                //每当按下+-*/四个操作符时都会判断前面的(倒数第二位)字符串是否也是+-*/四个操作符中的任何一个，\r\n                //如果是的话就让最后一个操作符代替(replace()方法)最后两个操作符，然后更新状态\r\n                if(second === '+'||second === '-'||second === '*'||second === '/')\r\n                {\r\n                    eq_tmp = eq_tmp.replace(two,last);\r\n                    this.setState({\r\n                        eq: eq_tmp\r\n                    });\r\n                }\r\n                break;\r\n            case '=':\r\n                eq_tmp = eq_tmp.substring(0, eq_tmp.length-1)\r\n                break;\r\n            case 'AC':\r\n                eq_tmp = \"\"\r\n                break;\r\n        }\r\n        //当按下=号的时候让结果(result)为eval(eq_tmp)，然后等式eq为空\r\n        //清除掉输入的表达式，方便下一次输入\r\n        if(num === '=')\r\n        {\r\n            this.setState({\r\n                result: eval(eq_tmp),\r\n                eq: \"\",\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                eq: eq_tmp\r\n            });\r\n        }\r\n        if(num === 'AC')  //判断是否点击了AC键，清除输入和结果\r\n        {\r\n            this.setState({\r\n                eq: eq_tmp,\r\n                result: '0'\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*算式*/}\r\n                <div className=\"resultText\">{this.state.eq}</div>\r\n                {/*输出结果*/}\r\n                <div className=\"resultText\">{this.state.result}</div>\r\n                <table>\r\n                    <tbody>\r\n                    <tr className=\"buttonContainer\">\r\n                        <th className=\"topButton\" onClick={()=>this._onPressButton('AC')}>AC</th>\r\n                        <th className=\"topButton\" onClick={()=>this._onPressButton('')}>+/-</th>\r\n                        <th className=\"topButton\" onClick={()=>this._onPressButton('')}>%</th>\r\n                        <th className=\"topButton\" onClick={()=>this._onPressButton('/')}>÷</th>\r\n                    </tr>\r\n                    <tr className=\"buttonContainer\">\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('7')}>7</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('8')}>8</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('9')}>9</th>\r\n                        <th className=\"rightButton\" onClick={()=>this._onPressButton('*')}>x</th>\r\n                    </tr>\r\n                    <tr className=\"buttonContainer\">\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('4')}>4</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('5')}>5</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('6')}>6</th>\r\n                        <th className=\"rightButton\" onClick={()=>this._onPressButton('-')}>-</th>\r\n                    </tr>\r\n                    <tr className=\"buttonContainer\">\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('1')}>1</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('2')}>2</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('3')}>3</th>\r\n                        <th className=\"rightButton\" onClick={()=>this._onPressButton('+')}>+</th>\r\n                    </tr>\r\n                    <tr className=\"buttonContainer\">\r\n                        <th colSpan={2}  className=\"zeroButton\" onClick={()=>this._onPressButton('0')}>0</th>\r\n                        <th className=\"centerButton\" onClick={()=>this._onPressButton('.')}>.</th>\r\n                        <th className=\"rightButton\" onClick={()=>this._onPressButton('=')}>=</th>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nreportWebVitals();\r\n\r\nexport default Touchables",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":2,"column":8,"nodeType":"26","messageId":"27","endLine":2,"endColumn":16},{"ruleId":"28","severity":1,"message":"29","line":58,"column":25,"nodeType":"30","messageId":"31","endLine":58,"endColumn":29},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]